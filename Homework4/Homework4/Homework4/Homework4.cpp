/*1)Написать функцию которая выводит массив double чисел на экран.
Параметры функции это сам массив и его размер.Вызвать эту функцию из main.
2)Задать целочисленный массив, состоящий из элементов 0 и 1. 
Например: [1, 1, 0, 0, 1, 0, 1, 1, 0, 0] .
Написать функцию, заменяющую в принятом массиве 0 на 1, 1 на 0. Выводить на экран массив до изменений и после.
3)Задать пустой целочисленный массив размером 8. Написать функцию, 
которая с помощью цикла заполнит его значениями 1 4 7 10 13 16 19 22. Вывести массив на экран.
4)* Написать функцию, которой на вход подаётся одномерный массив и число n(может быть положительным, или отрицательным), 
при этом метод должен циклически сместить все элементы массива на n позиций.
5)** Написать функцию, которой передается не пустой одномерный целочисленный массив, 
она должна вернуть истину если в массиве есть место, в котором сумма левой и правой части массива равны.
Примеры : checkBalance([1, 1, 1, || 2, 1]) → true, checkBalance([2, 1, 1, 2, 1]) → false, 
checkBalance([10, || 1, 2, 3, 4]) → true.Абстрактная граница показана символами || , эти символы в массив не входят.
*/
#include <iostream>

void Task1(double numbers[], int n)
{
    for (int i = 0; i < n; i++)
    {
        std::cout << numbers[i] << " ";
    }
    std::cout << "\n";
}

void Task2(bool numbers[], int n)
{
    for (int i = 0; i < n+1; i++)
    {
        if (numbers[i] != 0)
            numbers[i] = 0;
        else 
            numbers[i] = 1;
    }
}

void Task3(int numbers[], int n =8)
{
    for (int i = 0; i < n + 1; i++)
    {
        
            numbers[i] = i*3+1;
        
    }
}

void Task4()
{

}

void Task5()
{

}

int main()
{
    
  
    //Task1
  double nums[] = { 0.1, 0.2, 3, 4, 5, 6 };
    int n = sizeof(nums) / sizeof(nums[0]);
    Task1(nums, n);

    //Task2
    bool nums1[] = { 1,1,1,0,1 };
    std::cout << nums1[0] << " " << nums1[1] << " " << nums1[2] << " " << nums1[3] << " " << nums1[4] << "\n";
    Task2(nums1, 4);
    std::cout << nums1[0] << " " << nums1[1] << " " << nums1[2] << " " << nums1[3] << " " << nums1[4] << "\n";
   
    //Task3
    int nums2[] = { 0,0,0,0,0,0,0,0 };    
    Task3(nums2);
    for (int i = 0; i < 8; i++)
    {
        std::cout << nums2[i] << " ";
    }
}




